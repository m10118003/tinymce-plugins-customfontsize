/**
 * customfontsize 1.0v 2023-8-24
 * This tinymce-plugins is custom used to set the font size.
   
 * In use this plugin, please refer to the Vue 2.6.10, tinymce 4.9.3
 * And use the editor.translate(), that means using tinymce i18n itself
 * If you use the editor.translate(), please add those codes below in tinymce/langs/en.js, tinymce/langs/zh_TW.js or tinymce/langs/zh_CN.js
 
 * When initializing TinyMCE, import this plug-in and add in the tinymce.init() code:
tinymce.init({  
  content_style: 'body { font-size: 16px; }',  
  plugins: 'customfontsize ...',  
  toolbar: 'customfontsize ...'  
});  

* Note, if you don't want to use the plugin form, you may use the customFontSize.js code in:  
window.tinymce.init({  
  content_style: 'body { font-size: 16px; }',  
  plugins: 'customfontsize ...',  
  toolbar: 'customfontsize ...',  
  ...,  
  setup(editor) {
    editor.addButton('customfontsize', { ..})  
  }
}) 

 * Put the code in plugin.min.js:  
public/tinymce/plugins/customfontsize/plugin.min.js

 * In " tinymce/langs/en.js":  
'Set Font Size': "Set Font Size",  
'Font Size': "Font Size",  

 * In "tinymce/langs/zh_TW.js":  
'Set Font Size': "\u8abf\u6574\u6587\u5b57\u5927\u5c0f",  
'Font Size': "\u6587\u5b57\u5927\u5c0f",

 * In "tinymce/langs/zh_CN.js":  
'Set Font Size': "\u8bbe\u7f6e\u5b57\u4f53\u5927\u5c0f",  
'Font Size': "\u5b57\u4f53\u5927\u5c0f",

 * https://github.com/m10118003/tinymce-plugins-customfontsize
 
 * Copyright 2023, Brian Shih Taiwan
 
 * Licensed under MIT
**/

tinymce.PluginManager.add("customfontsize", function(editor) {
    // // 調整 tinymce 預設文字大小, 將 inline-style 設定為 font-size:16px; set default font size
    // // 先捕抓 ExecCommand 事件, Check ExecCommand event
    // editor.on('ExecCommand', function (e) {
    //     // 檢查命令和修改 style property, Check commands and modify style property
    //     if (e.command === 'mceInsertParagraph') {
    //         setTimeout(function () {
    //             var node = editor.selection.getNode();
    //             if (node && node.tagName === 'P' && !node.style.fontSize) {
    //                 node.style.fontSize = '16px';
    //             }
    //         }, 10);  // 使用 setTimeout 確保元素已經被插入, Use setTimeout to ensure that the element has been inserted
    //     }
    // });

    // 自定義文字大小, custom font size
    let pluginName = editor.translate("Set Font Size");
    let customFontSizeButton;

    editor.addButton("customfontsize", {
        text: "16px",
        icon: false,
        tooltip: pluginName,
        style: "width: 100px", // 設定按鈕寬度, set width for button
        onPostRender: function() {
            customFontSizeButton = this; // 保存按鈕實例, save the instance button
        },
        onclick: function() {
            editor.windowManager.open({
                title: editor.translate("Set Font Size"), // editor.translate() 使用 tinymce 本身的 i18n, using tinymce i18n itself
                body: [
                    {
                        type: "textbox",
                        name: "fontsize",
                        label: editor.translate("Font Size"), // editor.translate() 使用 tinymce 本身的 i18n, using tinymce i18n itself
                        value: "" // 文字預設為空, set default font size
                    }
                ],
                onsubmit: function(e) {
                    let fontSize = e.data.fontsize.trim();

                    // 如果輸入為空或不包含數字，設置一個預設值, set a default value if the input is empty or does not contain a number
                    const matches = fontSize.match(/\d+/g); // 獲取所有數字組合, get all number combinations
                    if (!fontSize || !matches || matches.length !== 1) {
                        fontSize = "16px";
                    } else {
                        // 只保留第一組數字, 並確保以 px 結尾, Only keep the first set of numbers, and make sure to end with px
                        fontSize = matches[0] + "px";

                        // 移除不是數字的字符並確保以 "px" 結尾, remove the set of numbers, and make sure to end with px
                        // fontSize = fontSize.replace(/[^\d]/g, '') + 'px';

                        // 確保以 "px" 結尾, make sure to end with px
                        // fontSize += 'px';
                    }

                    // 檢查是否已經包含'px'，如果沒有則加上, check if 'px' is already included or not, if not just add
                    if (!fontSize.toLowerCase().endsWith("px")) {
                        fontSize += "px";
                    }

                    // 轉換字體大小到整數, converts font size to integer
                    const numericSize = parseInt(fontSize, 10);

                    // 如果字體大小小於12px，則將其設定為16px, if the font size is less than 12px, set it to 16px
                    if (numericSize < 12) {
                        fontSize = "16px";
                    }

                    // 更新自定義的字體大小命令, update command the custom font size
                    editor.formatter.register("customfontsize", {
                        // inline: 'span',
                        block: "p",
                        styles: { fontSize: "%value" }
                    });
                    editor.formatter.apply("customfontsize", {
                        value: fontSize
                    });
                    // 更新按鈕文字, update the button text
                    if (customFontSizeButton) {
                        customFontSizeButton.text(fontSize);
                    }
                }
            });
        }
    });

    // Listen the Undo, Redo event and ClearFormatting event, and update the custom font size button text
    editor.on("NodeChange", function() {
        // Get the current font size
        let currentFontSize = editor.dom.getStyle(
            editor.selection.getNode(),
            "fontSize",
            true
        );
        if (!currentFontSize) {
            currentFontSize = "16px";
        }

        if (customFontSizeButton) {
            customFontSizeButton.text(currentFontSize);
        }
    });
});
